/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/perfil/perfilCandidato.ts":
/*!***************************************!*\
  !*** ./src/perfil/perfilCandidato.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst CandidatoStorage_1 = __webpack_require__(/*! ../storageDB/CandidatoStorage */ \"./src/storageDB/CandidatoStorage.ts\");\nconst deixaDadosEmAnomino_1 = __webpack_require__(/*! ../tools/deixaDadosEmAnomino */ \"./src/tools/deixaDadosEmAnomino.ts\");\nconst VagaStorage_1 = __webpack_require__(/*! ../storageDB/VagaStorage */ \"./src/storageDB/VagaStorage.ts\");\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const candidatoStorage = new CandidatoStorage_1.CandidatoStorage();\n    const candidatos = candidatoStorage.getStoredCandidatos();\n    const urlParams = new URLSearchParams(window.location.search);\n    const cpfParam = urlParams.get('cpf');\n    const candidato = candidatos.find((c) => c.cpf === cpfParam);\n    if (candidato) {\n        preencherDadosPerfil(candidato);\n    }\n    else {\n        console.error(\"Candidato nao encontrada\");\n    }\n    const vagaStorage = new VagaStorage_1.VagaStorage();\n    const vagas = vagaStorage.getStoredVagass();\n    listarVagas(vagas);\n});\nfunction listarVagas(vagas) {\n    const vagasElement = document.getElementById('lista-vagas');\n    if (vagasElement) {\n        vagasElement.innerHTML += '';\n        vagas.forEach((vaga) => {\n            vagasElement.innerHTML += `\n                <div class=\"mb-3\" style=\"max-width: 300px;\">                \n                     <h4>${(0, deixaDadosEmAnomino_1.anonimizarNome)(vaga.nomeEmpresa)}</h4>\n                     <p>Descrição: ${vaga.descricaoVaga}</p>\n                     <p>Localização: ${(0, deixaDadosEmAnomino_1.anonimizarNome)(vaga.cidade)}, ${(0, deixaDadosEmAnomino_1.anonimizarNome)(vaga.estado)}</p>\n                     <p>Competências: ${vaga.competencias.join(\", \")}</p>\n                </div>\n            `;\n        });\n    }\n}\nfunction preencherDadosPerfil(candidato) {\n    const nomeElement = document.querySelectorAll('.nome-idade li');\n    if (nomeElement) {\n        nomeElement[0].innerHTML = `<h3>${candidato.nome}</h3>`;\n        nomeElement[1].innerHTML = `<h3>, ${candidato.idade.toString()} anos</h3>`;\n    }\n    const emailElement = document.querySelector('.email');\n    if (emailElement) {\n        emailElement.textContent = candidato.email;\n    }\n    const cpfElement = document.querySelector('.cpf');\n    if (cpfElement) {\n        cpfElement.textContent = candidato.cpf;\n    }\n    const estadoElement = document.querySelectorAll('.estado li');\n    if (estadoElement) {\n        estadoElement[0].textContent = candidato.estado;\n        estadoElement[1].textContent = `, ${candidato.cep}`;\n    }\n    const descricaoElement = document.querySelector('.descricao');\n    if (descricaoElement) {\n        descricaoElement.textContent = candidato.descricao;\n    }\n    const competenciasElement = document.querySelector('.competencias');\n    if (competenciasElement) {\n        competenciasElement.innerHTML = '';\n        candidato.competencias.forEach(competencia => {\n            competenciasElement.innerHTML += `<li class=\"badge text-bg-secondary text-wrap me-2\">${competencia}</li>`;\n        });\n    }\n}\n\n\n//# sourceURL=webpack://frontend/./src/perfil/perfilCandidato.ts?");

/***/ }),

/***/ "./src/storageDB/CandidatoStorage.ts":
/*!*******************************************!*\
  !*** ./src/storageDB/CandidatoStorage.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CandidatoStorage = void 0;\nclass CandidatoStorage {\n    add(candidato) {\n        let candidatos = this.getStoredCandidatos();\n        const candidatoExiste = candidatos.some(candidatoExistente => candidatoExistente.cpf === candidato.cpf);\n        if (!candidatoExiste) {\n            candidatos.push(candidato);\n            window.localStorage.setItem(\"candidatos\", JSON.stringify(candidatos));\n        }\n        else {\n            console.log(`O candidato ${candidato.nome} já está na lista.`);\n        }\n    }\n    getStoredCandidatos() {\n        const storage = window.localStorage.getItem(\"candidatos\");\n        if (storage) {\n            return JSON.parse(storage);\n        }\n        else {\n            return [];\n        }\n    }\n}\nexports.CandidatoStorage = CandidatoStorage;\n\n\n//# sourceURL=webpack://frontend/./src/storageDB/CandidatoStorage.ts?");

/***/ }),

/***/ "./src/storageDB/VagaStorage.ts":
/*!**************************************!*\
  !*** ./src/storageDB/VagaStorage.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VagaStorage = void 0;\nclass VagaStorage {\n    add(vaga) {\n        let vagas = this.getStoredVagass();\n        const vagaExiste = vagas.some(vagaExistente => vagaExistente.nomeEmpresa === vaga.nomeEmpresa);\n        if (!vagaExiste) {\n            vagas.push(vaga);\n            window.localStorage.setItem(\"vagas\", JSON.stringify(vagas));\n        }\n        else {\n            console.log(`A vaga da empresa ${vaga.nomeEmpresa} já está na lista.`);\n        }\n    }\n    getStoredVagass() {\n        const storage = window.localStorage.getItem(\"vagas\");\n        if (storage) {\n            return JSON.parse(storage);\n        }\n        else {\n            return [];\n        }\n    }\n}\nexports.VagaStorage = VagaStorage;\n\n\n//# sourceURL=webpack://frontend/./src/storageDB/VagaStorage.ts?");

/***/ }),

/***/ "./src/tools/deixaDadosEmAnomino.ts":
/*!******************************************!*\
  !*** ./src/tools/deixaDadosEmAnomino.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.anonimizarEmail = exports.anonimizarNome = void 0;\nfunction anonimizarNome(nome) {\n    const nomeAnonimo = nome.slice(0, 2) + '*'.repeat(nome.length - 2);\n    return nomeAnonimo;\n}\nexports.anonimizarNome = anonimizarNome;\nfunction anonimizarEmail(email) {\n    const partes = email.split('@');\n    const nomeUsuario = partes[0];\n    const dominio = partes[1];\n    const nomeUsuarioAnonimo = anonimizarNome(nomeUsuario);\n    const partesDominio = dominio.split('.');\n    const nomeDominio = partesDominio[0];\n    const dominioRestante = partesDominio.slice(1).join('.');\n    const nomeDominioAnonimo = anonimizarNome(nomeDominio);\n    return `${nomeUsuarioAnonimo}@${nomeDominioAnonimo}.${dominioRestante}`;\n}\nexports.anonimizarEmail = anonimizarEmail;\n\n\n//# sourceURL=webpack://frontend/./src/tools/deixaDadosEmAnomino.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/perfil/perfilCandidato.ts");
/******/ 	
/******/ })()
;